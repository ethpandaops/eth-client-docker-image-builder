name: Build prysm docker image

on:
  workflow_dispatch:
    inputs:
      repository: 
        description: The source prysm repository to build from
        default: prysmaticlabs/prysm
        type: string
        required: true
      ref:
        description: The branch, tag or SHA to checkout and build from
        default: develop
        type: string
        required: true
      docker_tag:
        description: Override target docker tag (defaults to the above source ref if left blank)
        type: string
        required: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.setup.outputs.platforms }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare Matrix
        id: setup
        uses: ./.github/actions/prepare
        with:
          client: 'prysm-beacon-chain'
  deploy-beacon:
    needs:
      - prepare
    runs-on: ${{ matrix.runner }}
    continue-on-error: true
    strategy:
      matrix:
        include: ${{fromJson(needs.prepare.outputs.platforms)}}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-deps
        with:
          repository: ${{ inputs.repository }}
      - uses: ./.github/actions/deploy
        with:
          source_repository: ${{ inputs.repository }}
          source_ref: ${{ inputs.ref }}
          build_script: ./prysm/build_beacon.sh
          target_tag: ${{ inputs.docker_tag || inputs.ref }}-${{ matrix.slug }}
          target_repository: ethpandaops/prysm-beacon-chain
          target_dockerfile: ./prysm/Dockerfile.beacon
          platform: ${{ matrix.platform }}

          DOCKER_USERNAME: "${{ vars.DOCKER_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
          MACOS_PASSWORD: "${{ secrets.MACOS_PASSWORD }}"
          GOPROXY: "${{ vars.GOPROXY }}"
  deploy-validator:
    needs:
      - prepare
    runs-on: ${{ matrix.runner }}
    continue-on-error: true
    strategy:
      matrix:
        include: ${{fromJson(needs.prepare.outputs.platforms)}}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-deps
        with:
          repository: ${{ inputs.repository }}
      - uses: ./.github/actions/deploy
        with:
          source_repository: ${{ inputs.repository }}
          source_ref: ${{ inputs.ref }}
          build_script: ./prysm/build_validator.sh
          target_tag: ${{ inputs.docker_tag || inputs.ref }}-${{ matrix.slug }}
          target_repository: ethpandaops/prysm-validator
          target_dockerfile: ./prysm/Dockerfile.validator
          platform: ${{ matrix.platform }}

          DOCKER_USERNAME: "${{ vars.DOCKER_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
          MACOS_PASSWORD: "${{ secrets.MACOS_PASSWORD }}"
          GOPROXY: "${{ vars.GOPROXY }}"
  manifest-beacon:
    needs:
      - prepare
      - deploy-beacon
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/manifest
        with:
          source_repository: ${{ inputs.repository }}
          source_ref: ${{ inputs.ref }}
          target_tag: ${{ inputs.docker_tag || inputs.ref }}
          target_repository: ethpandaops/prysm-beacon-chain
          platforms: ${{ needs.prepare.outputs.platforms }}

          DOCKER_USERNAME: "${{ vars.DOCKER_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
  manifest-validator:
    needs:
      - prepare
      - deploy-validator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/manifest
        with:
          source_repository: ${{ inputs.repository }}
          source_ref: ${{ inputs.ref }}
          target_tag: ${{ inputs.docker_tag || inputs.ref }}
          target_repository: ethpandaops/prysm-validator
          platforms: ${{ needs.prepare.outputs.platforms }}

          DOCKER_USERNAME: "${{ vars.DOCKER_USERNAME }}"
          DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - prepare
      - deploy-beacon
      - deploy-validator
      - manifest-beacon
      - manifest-validator
    if: failure()
    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
